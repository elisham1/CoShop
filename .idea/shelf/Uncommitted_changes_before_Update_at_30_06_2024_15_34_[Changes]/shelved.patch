Index: app/src/main/java/com/elisham/coshop/UpdateUserDetailsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.elisham.coshop;\r\n\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.ActionBar;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\n\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.Matrix;\r\nimport android.media.ExifInterface;\r\nimport android.net.Uri;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.util.Log;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageButton;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.app.AlertDialog;\r\nimport android.content.DialogInterface;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.android.material.snackbar.Snackbar;\r\nimport com.google.firebase.firestore.GeoPoint;\r\nimport com.google.firebase.firestore.QuerySnapshot;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\n\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\n\r\n\r\npublic class UpdateUserDetailsActivity extends AppCompatActivity {\r\n\r\n    private ActivityResultLauncher<Intent> locationWindowLauncher;\r\n    private TextView searchAddressText;\r\n    private ImageButton searchAddressButton;\r\n    private ImageButton editAddressButton;\r\n    private String lastAddress;\r\n    private double lastLatitude;\r\n    private double lastLongitude;\r\n    private int lastDistance;\r\n\r\n    private TextView fullNameTextView;\r\n    private TextView emailTextView;\r\n    private EditText addressEditText;\r\n    private TextView typeOfUserTextView;\r\n    private ImageView profileImageView;\r\n\r\n    private String email, firstName, familyName, userType, picUrl;\r\n    private GeoPoint address;\r\n    private String newFirstName, newFamilyName;\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseUser currentUser;\r\n    private FirebaseFirestore db;\r\n    private FirebaseStorage storage;\r\n    private StorageReference storageReference;\r\n\r\n    private boolean changeName = false;\r\n    private boolean changePic = false;\r\n    private boolean changeLocation = false;\r\n    private Uri imageUri;\r\n    private static final int TAKE_PHOTO_REQUEST = 1;\r\n    private static final int PICK_IMAGE_REQUEST = 2;\r\n    private MenuUtils menuUtils;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_update_user_details);\r\n        menuUtils = new MenuUtils(this);\r\n        db = FirebaseFirestore.getInstance();\r\n        mAuth = FirebaseAuth.getInstance();\r\n        storage = FirebaseStorage.getInstance();\r\n        storageReference = storage.getReference();\r\n\r\n        emailTextView = findViewById(R.id.emailText);\r\n        fullNameTextView = findViewById(R.id.fullName);\r\n//        addressEditText = findViewById(R.id.addressText);\r\n        typeOfUserTextView = findViewById(R.id.type_of_user);\r\n        profileImageView = findViewById(R.id.profileImage);\r\n\r\n        searchAddressText = findViewById(R.id.search_address_text);\r\n        searchAddressButton = findViewById(R.id.search_address_button);\r\n        editAddressButton = findViewById(R.id.edit_address_button);\r\n\r\n        getUserInformation();\r\n        showLocationWindow();\r\n\r\n        fullNameTextView.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showNameEditDialog();\r\n            }\r\n        });\r\n\r\n        CardView profilePic = findViewById(R.id.profilePic);\r\n        profilePic.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                showImageSourceDialog();\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    private void showLocationWindow() {\r\n        locationWindowLauncher = registerForActivityResult(\r\n                new ActivityResultContracts.StartActivityForResult(),\r\n                result -> {\r\n                    if (result.getResultCode() == RESULT_OK && result.getData() != null) {\r\n                        lastAddress = result.getData().getStringExtra(\"address\");\r\n                        lastDistance = result.getData().getIntExtra(\"distance\", 0);\r\n                        lastLatitude = result.getData().getDoubleExtra(\"latitude\", 0);\r\n                        lastLongitude = result.getData().getDoubleExtra(\"longitude\", 0);\r\n\r\n                        if (lastAddress != null) {\r\n                            String displayText = String.format(Locale.getDefault(), \"%s, %d KM\", lastAddress, lastDistance);\r\n                            searchAddressText.setText(displayText);\r\n                            searchAddressButton.setVisibility(View.VISIBLE);\r\n                            searchAddressButton.setTag(\"clear\");\r\n                            searchAddressButton.setImageResource(R.drawable.clear);\r\n                            editAddressButton.setVisibility(View.VISIBLE);\r\n                        }\r\n                    }\r\n                }\r\n        );\r\n\r\n        LinearLayout searchRow = findViewById(R.id.search_row);\r\n        searchRow.setOnClickListener(v -> {\r\n            Intent intent = new Intent(UpdateUserDetailsActivity.this, LocationWindow.class);\r\n            if (lastAddress != null && !lastAddress.isEmpty() && lastDistance > 0) {\r\n                intent.putExtra(\"address\", lastAddress);\r\n                intent.putExtra(\"distance\", lastDistance);\r\n            }\r\n            locationWindowLauncher.launch(intent);\r\n        });\r\n\r\n        searchAddressButton.setOnClickListener(v -> {\r\n            if (searchAddressButton.getTag() != null && searchAddressButton.getTag().equals(\"clear\")) {\r\n                searchAddressText.setText(\"\");\r\n                searchAddressButton.setTag(\"search\");\r\n                searchAddressButton.setImageResource(R.drawable.baseline_search_24);\r\n                editAddressButton.setVisibility(View.GONE);\r\n\r\n                // איפוס הערכים האחרונים\r\n                lastAddress = null;\r\n                lastDistance = 0;\r\n                lastLatitude = 0;\r\n                lastLongitude = 0;\r\n            }\r\n        });\r\n\r\n        searchAddressText.addTextChangedListener(new TextWatcher() {\r\n            @Override\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {}\r\n\r\n            @Override\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                toggleSearchClearIcon();\r\n            }\r\n\r\n            @Override\r\n            public void afterTextChanged(Editable s) {\r\n                changeLocation = true;\r\n            }\r\n        });\r\n\r\n        editAddressButton.setOnClickListener(v -> {\r\n            Intent intent = new Intent(UpdateUserDetailsActivity.this, LocationWindow.class);\r\n            if (lastAddress != null && !lastAddress.isEmpty() && lastDistance > 0) {\r\n                intent.putExtra(\"address\", lastAddress);\r\n                intent.putExtra(\"distance\", lastDistance);\r\n            }\r\n            locationWindowLauncher.launch(intent);\r\n        });\r\n    }\r\n\r\n    private void toggleSearchClearIcon() {\r\n        String address = searchAddressText.getText().toString();\r\n        if (!address.isEmpty() && lastDistance > 0) {\r\n            searchAddressButton.setTag(\"clear\");\r\n            searchAddressButton.setImageResource(R.drawable.clear);\r\n            editAddressButton.setVisibility(View.VISIBLE);\r\n        } else {\r\n            searchAddressButton.setTag(\"search\");\r\n            searchAddressButton.setImageResource(R.drawable.baseline_search_24);\r\n            editAddressButton.setVisibility(View.GONE);\r\n        }\r\n    }\r\n\r\n    private void showImageSourceDialog() {\r\n        androidx.appcompat.app.AlertDialog.Builder builder = new androidx.appcompat.app.AlertDialog.Builder(this);\r\n        builder.setTitle(\"Change Profile Picture\");\r\n        builder.setItems(new CharSequence[]{\"Take Photo\", \"Choose from Gallery\"},\r\n                new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        switch (which) {\r\n                            case 0:\r\n                                checkCameraPermissionAndTakePhoto();\r\n                                break;\r\n                            case 1:\r\n                                openFileChooser();\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n        builder.show();\r\n    }\r\n\r\n    private void checkCameraPermissionAndTakePhoto() {\r\n        if (ContextCompat.checkSelfPermission(this, android.Manifest.permission.CAMERA) != PackageManager.PERMISSION_GRANTED) {\r\n            ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.CAMERA}, TAKE_PHOTO_REQUEST);\r\n        }\r\n        else {\r\n            takePhoto();\r\n        }\r\n    }\r\n\r\n    private void openFileChooser() {\r\n        Intent intent = new Intent();\r\n        intent.setType(\"image/*\");\r\n        intent.setAction(Intent.ACTION_GET_CONTENT);\r\n        startActivityForResult(intent, PICK_IMAGE_REQUEST);\r\n    }\r\n\r\n    private void takePhoto() {\r\n        Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);\r\n        if (intent.resolveActivity(getPackageManager()) != null) {\r\n            startActivityForResult(intent, TAKE_PHOTO_REQUEST);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (resultCode == RESULT_OK) {\r\n            if (requestCode == PICK_IMAGE_REQUEST && data != null && data.getData() != null) {\r\n                imageUri = data.getData();\r\n                try {\r\n                    Bitmap bitmap = MediaStore.Images.Media.getBitmap(getContentResolver(), imageUri);\r\n                    bitmap = rotateImageIfRequired(bitmap, imageUri);\r\n                    profileImageView.setImageBitmap(bitmap);\r\n                    uploadImage();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            } else if (requestCode == TAKE_PHOTO_REQUEST && data != null && data.getExtras() != null) {\r\n                Bitmap bitmap = (Bitmap) data.getExtras().get(\"data\");\r\n                imageUri = getImageUri(bitmap);\r\n                try {\r\n                    bitmap = rotateImageIfRequired(bitmap, imageUri);\r\n                    profileImageView.setImageBitmap(bitmap);\r\n                    uploadImage();\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void uploadImage() {\r\n\r\n        if (imageUri != null) {\r\n            // Delete previous profile picture if exists\r\n            if (picUrl != null && !picUrl.isEmpty()) {\r\n                deleteUserProfileImage(picUrl);\r\n            }\r\n\r\n            StorageReference fileReference = storageReference.child(\"profile_images/\" + System.currentTimeMillis() + \".jpg\");\r\n            fileReference.putFile(imageUri)\r\n                    .addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n                        @Override\r\n                        public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                            fileReference.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                                @Override\r\n                                public void onSuccess(Uri uri) {\r\n\r\n                                    picUrl = uri.toString();\r\n                                    changePic = true;\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n                    .addOnFailureListener(new OnFailureListener() {\r\n                        @Override\r\n                        public void onFailure(@NonNull Exception e) {\r\n                            Toast.makeText(UpdateUserDetailsActivity.this, \"Upload failed: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n        } else {\r\n            Toast.makeText(this, \"No file selected\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    }\r\n\r\n    private Bitmap rotateImageIfRequired(Bitmap img, Uri selectedImage) throws IOException {\r\n        InputStream input = getContentResolver().openInputStream(selectedImage);\r\n        ExifInterface ei;\r\n        if (Build.VERSION.SDK_INT > 23) {\r\n            ei = new ExifInterface(input);\r\n        } else {\r\n            ei = new ExifInterface(selectedImage.getPath());\r\n        }\r\n        int orientation = ei.getAttributeInt(ExifInterface.TAG_ORIENTATION, ExifInterface.ORIENTATION_NORMAL);\r\n\r\n        switch (orientation) {\r\n            case ExifInterface.ORIENTATION_ROTATE_90:\r\n                return rotateImage(img, 90);\r\n            case ExifInterface.ORIENTATION_ROTATE_180:\r\n                return rotateImage(img, 180);\r\n            case ExifInterface.ORIENTATION_ROTATE_270:\r\n                return rotateImage(img, 270);\r\n            default:\r\n                return img;\r\n        }\r\n    }\r\n\r\n    private Bitmap rotateImage(Bitmap img, int degree) {\r\n        Matrix matrix = new Matrix();\r\n        matrix.postRotate(degree);\r\n        return Bitmap.createBitmap(img, 0, 0, img.getWidth(), img.getHeight(), matrix, true);\r\n    }\r\n\r\n    private Uri getImageUri(Bitmap bitmap) {\r\n        String path = MediaStore.Images.Media.insertImage(getContentResolver(), bitmap, \"ProfilePic\", null);\r\n        return Uri.parse(path);\r\n    }\r\n\r\n\r\n    private void showNameEditDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_edit_name, null);\r\n        EditText firstNameEditText = dialogView.findViewById(R.id.firstNameEditText);\r\n        EditText familyNameEditText = dialogView.findViewById(R.id.familyNameEditText);\r\n        ImageView clearFirstNameIcon = dialogView.findViewById(R.id.clearFirstNameIcon); // Icon view\r\n        ImageView clearFamilyNameIcon = dialogView.findViewById(R.id.clearFamilyNameIcon); // Icon view\r\n\r\n        // Set current values\r\n        firstNameEditText.setText(firstName);\r\n        familyNameEditText.setText(familyName);\r\n\r\n        // Set onClickListener for the  first name clear icon\r\n        clearFirstNameIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                firstNameEditText.setText(\"\"); // Clear the text in EditText\r\n            }\r\n        });\r\n\r\n        // Set onClickListener for the family name clear icon\r\n        clearFamilyNameIcon.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                familyNameEditText.setText(\"\"); // Clear the text in EditText\r\n            }\r\n        });\r\n\r\n        builder.setView(dialogView)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        newFirstName = firstNameEditText.getText().toString().trim();\r\n                        firstName = newFirstName;\r\n                        newFamilyName = familyNameEditText.getText().toString().trim();\r\n                        familyName = newFamilyName;\r\n\r\n                        // Update UI with new names\r\n                        String fullName = newFirstName + \" \" + newFamilyName;\r\n                        fullNameTextView.setText(fullName);\r\n                        changeName = true;\r\n\r\n                        // Dismiss dialog\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .setNegativeButton(\"Cancel\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n\r\n        AlertDialog dialog = builder.create();\r\n        dialog.show();\r\n    }\r\n\r\n    public void getUserInformation() {\r\n\r\n        currentUser = mAuth.getCurrentUser();\r\n        if (currentUser != null) {\r\n            email = currentUser.getEmail();\r\n            db.collection(\"users\").document(email).get()\r\n                    .addOnCompleteListener(new OnCompleteListener<DocumentSnapshot>() {\r\n                        public void onComplete(@NonNull Task<DocumentSnapshot> task) {\r\n                            if (task.isSuccessful()) {\r\n                                DocumentSnapshot document = task.getResult();\r\n                                if (document.exists()) {\r\n                                    // Get the name and family name fields\r\n                                    firstName = document.getString(\"first name\");\r\n                                    familyName = document.getString(\"family name\");\r\n                                    address = document.getGeoPoint(\"address\");\r\n                                    userType = document.getString(\"type of user\");\r\n                                    picUrl = document.getString(\"profileImageUrl\");\r\n\r\n                                    String fullName = firstName + \" \" + familyName;\r\n                                    String typeText = \"User Type: \" + userType;\r\n                                    emailTextView.setText(email);\r\n                                    fullNameTextView.setText(fullName);\r\n                                    searchAddressText.setText(geoPointToString(address));\r\n                                    typeOfUserTextView.setText(typeText);\r\n                                    if (picUrl != null && !picUrl.isEmpty()) {\r\n                                        Glide.with(UpdateUserDetailsActivity.this)\r\n                                                .load(picUrl)\r\n                                                .into(profileImageView);\r\n                                    }\r\n                                    // Log or use the retrieved information\r\n                                    Log.d(\"firebase\", \"Name: \" + firstName + \", Family Name: \" + familyName);\r\n                                }\r\n                                else {\r\n                                    Log.d(\"firebase\", \"No such document\");\r\n                                }\r\n                            }\r\n                            else {\r\n                                Log.d(\"firebase\", \"get failed with \", task.getException());\r\n                            }\r\n                        }\r\n                    });\r\n        }\r\n        else {\r\n            AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n            builder.setMessage(\"Please Log in or Sign up\")\r\n                    .setCancelable(false)\r\n                    .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                        public void onClick(DialogInterface dialog, int id) {\r\n                            Intent toy = new Intent(UpdateUserDetailsActivity.this, MainActivity.class);\r\n                            startActivity(toy);\r\n                            finish();\r\n                        }\r\n                    });\r\n            AlertDialog alert = builder.create();\r\n            alert.show();\r\n        }\r\n\r\n    }\r\n\r\n    private String geoPointToString(GeoPoint geoPoint) {\r\n        if (geoPoint == null) {\r\n            return \"\";\r\n        }\r\n        double lat = geoPoint.getLatitude();\r\n        double lon = geoPoint.getLongitude();\r\n\r\n        return String.format(Locale.getDefault(), \"Lat: %.6f, Lng: %.6f\", lat, lon);\r\n    }\r\n\r\n\r\n    public void editUserDetails(View view) {\r\n        Map<String, Object> userDetails = new HashMap<>();\r\n        //check if change name is true and update map based on this.\r\n        if (changeName)\r\n        {\r\n            userDetails.put(\"first name\", firstName);\r\n            userDetails.put(\"family name\", familyName);\r\n        }\r\n\r\n        //check if change pic is true and update based on this.\r\n        if (changePic) {\r\n            userDetails.put(\"profileImageUrl\", picUrl);\r\n        }\r\n\r\n        // Update Firestore with the new details\r\n        db.collection(\"users\").document(email)\r\n                .update(userDetails)\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Toast.makeText(UpdateUserDetailsActivity.this, \"User details updated successfully\", Toast.LENGTH_SHORT).show();\r\n                        Log.d(\"EditUserDetails\", \"User details updated.\");\r\n                        // Optionally, navigate to another activity or perform further actions upon success\r\n                        Intent toy = new Intent(UpdateUserDetailsActivity.this, HomePageActivity.class);\r\n                        startActivity(toy);\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(UpdateUserDetailsActivity.this, \"Failed to update user details\", Toast.LENGTH_SHORT).show();\r\n                        Log.e(\"EditUserDetails\", \"Error updating user details\", e);\r\n                    }\r\n                });\r\n\r\n    }\r\n\r\n    public void deleteAccount(View v) {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setMessage(\"Are you sure you want to delete your account?\")\r\n                .setCancelable(true)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int id) {\r\n                        if(currentUser != null)\r\n                        {\r\n                            if (picUrl != null && !picUrl.isEmpty()) {\r\n                                deleteUserProfileImage(picUrl);\r\n                            }\r\n                            deleteUserFromAllOrders(db, email);\r\n                            deleteUserDetails(db, email);\r\n                            deleteUser(currentUser);\r\n                            dialog.dismiss();\r\n                        }\r\n                        else {\r\n                            Toast.makeText(UpdateUserDetailsActivity.this,\r\n                                    \"no user is signed in\", Toast.LENGTH_SHORT).show();\r\n                            Log.d(\"UpdateUserActivity\", \"No user is currently signed in.\");\r\n                        }\r\n                    }\r\n                });\r\n        AlertDialog alert = builder.create();\r\n        alert.show();\r\n    }\r\n\r\n    private void deleteUserProfileImage(String imageUrl) {\r\n        StorageReference photoRef = storage.getReferenceFromUrl(imageUrl);\r\n        photoRef.delete().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n            @Override\r\n            public void onSuccess(Void aVoid) {\r\n                Toast.makeText(UpdateUserDetailsActivity.this,\r\n                        \"Profile image deleted successfully\", Toast.LENGTH_SHORT).show();\r\n                Log.d(\"MainActivity\", \"Profile image deleted.\");\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception exception) {\r\n                Toast.makeText(UpdateUserDetailsActivity.this,\r\n                        \"Failed to delete profile image\", Toast.LENGTH_SHORT).show();\r\n                Log.e(\"MainActivity\", \"Error deleting profile image\", exception);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void deleteUserFromAllOrders(@NonNull FirebaseFirestore db, String emailToRemove) {\r\n\r\n        db.collection(\"orders\").get()\r\n                .addOnCompleteListener(new OnCompleteListener<QuerySnapshot>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<QuerySnapshot> task) {\r\n                        if (task.isSuccessful()) {\r\n                            List<DocumentSnapshot> documents = task.getResult().getDocuments();\r\n                            for (DocumentSnapshot document : documents) {\r\n                                List<String> mails = (List<String>) document.get(\"listPeopleInOrder\");\r\n                                if (mails != null && mails.contains(emailToRemove)) {\r\n                                    // Mail exists, remove it\r\n                                    mails.remove(emailToRemove);\r\n                                    document.getReference().update(\"listPeopleInOrder\", mails)\r\n                                            .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                                                @Override\r\n                                                public void onSuccess(Void aVoid) {\r\n                                                    Toast.makeText(UpdateUserDetailsActivity.this,\r\n                                                            \"user removed successfully from all orders\", Toast.LENGTH_SHORT).show();\r\n                                                    Log.d(\"MainActivity\", \"Mail removed successfully from \" + document.getId());\r\n                                                }\r\n                                            })\r\n                                            .addOnFailureListener(new OnFailureListener() {\r\n                                                @Override\r\n                                                public void onFailure(@NonNull Exception e) {\r\n                                                    Toast.makeText(UpdateUserDetailsActivity.this,\r\n                                                            \"failed to remove user from all orders\", Toast.LENGTH_SHORT).show();\r\n                                                    Log.e(\"MainActivity\", \"Error updating document\", e);\r\n                                                }\r\n                                            });\r\n                                    Log.d(\"MainActivity\", document.getId() + \" => \" + document.getData());\r\n                                }\r\n                            }\r\n                        }\r\n\r\n                        else {\r\n                            Log.w(\"MainActivity\", \"Error getting documents.\", task.getException());\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void deleteUserDetails(@NonNull FirebaseFirestore db, String emailToRemove) {\r\n        //delete all user connected details\r\n        db.collection(\"users\").document(emailToRemove).delete()\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Toast.makeText(UpdateUserDetailsActivity.this,\r\n                                \"user details removed successfully\", Toast.LENGTH_SHORT).show();\r\n                        Log.d(\"MainActivity\", \"Document successfully deleted!\");\r\n                        Intent toy = new Intent(UpdateUserDetailsActivity.this, MainActivity.class);\r\n                        startActivity(toy);\r\n                        finish();\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Toast.makeText(UpdateUserDetailsActivity.this,\r\n                                \"failed to remove user details\", Toast.LENGTH_SHORT).show();\r\n                        Log.w(\"MainActivity\", \"Error deleting document\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void deleteUser(FirebaseUser curr){\r\n        currentUser.delete()\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Toast.makeText(UpdateUserDetailsActivity.this,\r\n                                \"Account successfully deleted! 111\", Toast.LENGTH_SHORT).show();\r\n                        Log.d(\"MainActivity\", \"User account deleted.\");\r\n                    }\r\n                })\r\n                .addOnFailureListener(new OnFailureListener() {\r\n                    @Override\r\n                    public void onFailure(@NonNull Exception e) {\r\n                        Log.e(\"MainActivity\", \"Error deleting user\", e);\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void changePassword(View v) {\r\n        Intent toy = new Intent(UpdateUserDetailsActivity.this, ChangePasswordActivity.class);\r\n        startActivity(toy);\r\n    }\r\n\r\n\r\n    private void showAlertDialog(String message) {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setMessage(message)\r\n                .setCancelable(false)\r\n                .setPositiveButton(\"OK\", new DialogInterface.OnClickListener() {\r\n                    public void onClick(DialogInterface dialog, int id) {\r\n                        dialog.dismiss();\r\n                    }\r\n                });\r\n        AlertDialog alert = builder.create();\r\n        alert.show();\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        getMenuInflater().inflate(R.menu.menu_items, menu);\r\n        return true;\r\n    }\r\n\r\n    @Override\r\n    public boolean onOptionsItemSelected(MenuItem item) {\r\n        switch (item.getItemId()) {\r\n            case R.id.Personal_info:\r\n                menuUtils.personalInfo();\r\n                return true;\r\n            case R.id.My_Orders:\r\n                menuUtils.myOrders();\r\n                return true;\r\n            case R.id.About_Us:\r\n                menuUtils.aboutUs();\r\n                return true;\r\n            case R.id.Contact_Us:\r\n                menuUtils.contactUs();\r\n                return true;\r\n            case R.id.Log_Out:\r\n                menuUtils.logOut();\r\n                return true;\r\n            case R.id.list_icon:\r\n                menuUtils.basket();\r\n                return true;\r\n            case R.id.home:\r\n                menuUtils.home();\r\n                return true;\r\n            default:\r\n                return super.onOptionsItemSelected(item);\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/elisham/coshop/UpdateUserDetailsActivity.java b/app/src/main/java/com/elisham/coshop/UpdateUserDetailsActivity.java
--- a/app/src/main/java/com/elisham/coshop/UpdateUserDetailsActivity.java	(revision 81f30c7ff336555d02e3adbc24a813c899a776cb)
+++ b/app/src/main/java/com/elisham/coshop/UpdateUserDetailsActivity.java	(date 1719750212995)
@@ -10,6 +10,9 @@
 import androidx.core.app.ActivityCompat;
 import androidx.core.content.ContextCompat;
 
+import android.location.Address;
+import android.location.Geocoder;
+
 import android.Manifest;
 import android.content.Intent;
 import android.content.pm.PackageManager;
@@ -75,7 +78,6 @@
     private double lastLatitude;
     private double lastLongitude;
     private int lastDistance;
-
     private TextView fullNameTextView;
     private TextView emailTextView;
     private EditText addressEditText;
@@ -148,6 +150,9 @@
                         lastDistance = result.getData().getIntExtra("distance", 0);
                         lastLatitude = result.getData().getDoubleExtra("latitude", 0);
                         lastLongitude = result.getData().getDoubleExtra("longitude", 0);
+                        if (lastLatitude != 0 && lastLongitude != 0) {
+                            address = new GeoPoint(lastLatitude, lastLongitude);
+                        }
 
                         if (lastAddress != null) {
                             String displayText = String.format(Locale.getDefault(), "%s, %d KM", lastAddress, lastDistance);
@@ -485,8 +490,17 @@
         }
         double lat = geoPoint.getLatitude();
         double lon = geoPoint.getLongitude();
-
-        return String.format(Locale.getDefault(), "Lat: %.6f, Lng: %.6f", lat, lon);
+        String address = "";
+        Geocoder geocoder = new Geocoder(this, Locale.ENGLISH);
+        try {
+            List<Address> addresses = geocoder.getFromLocation(lat, lon, 1);
+            if (addresses != null && !addresses.isEmpty()) {
+                address = addresses.get(0).getAddressLine(0);
+            }
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return address;
     }
 
 
@@ -504,6 +518,8 @@
             userDetails.put("profileImageUrl", picUrl);
         }
 
+        userDetails.put("address", address);
+
         // Update Firestore with the new details
         db.collection("users").document(email)
                 .update(userDetails)
